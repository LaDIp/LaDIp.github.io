{"version":3,"sources":["components/LinkList/style.module.scss","store/types.ts","store/actions.ts","hooks.ts","themes.tsx","components/LinkList/index.tsx","components/Card/index.tsx","helper/Tree.ts","App.tsx","store/reducers.ts","store/index.ts","index.tsx","components/Card/style.module.scss"],"names":["module","exports","routeNodeActionTypes","routeNodeAddAction","payload","type","ADD_NODE","useAppSelector","useSelector","ThemeContext","React","createContext","LinkList","nodes","theme","useContext","className","style","list","map","node","classNames","list__link","fb","wa","to","route","title","Card","useState","setTheme","loaction","useLocation","dispatch","useDispatch","bindActionCreators","ActionCreators","useActions","useEffect","length","Provider","value","card","head","back","pathname","replace","initialValues","onSubmit","values","actions","console","log","setSubmitting","resetForm","path","newNode","form","form__input","id","name","placeholder","form__submit","Tree","tree","this","setRoutes","paths","forEach","push","App","routeTree","state","routes","element","defaultState","routeNodeRuducer","action","produce","draft","addNodeToTree","depth","isNodeInTree","find","alert","currentRoute","substring","split","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87c91193.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"style_list__2Sdh9\",\"list__link\":\"style_list__link__3nXdt\"};","export enum routeNodeActionTypes {\n  ADD_NODE = 'ADD_NODE',\n}\n\ntype routeNodeAddAction = {\n  type: routeNodeActionTypes.ADD_NODE\n  payload: {\n    path: string\n    newNode: RouteTree\n  }\n}\n\nexport type routeNodeAction = routeNodeAddAction\n","import { routeNodeAction, routeNodeActionTypes } from './types'\n\nconst routeNodeAddAction = (payload: {\n  path: string\n  newNode: RouteTree\n}): routeNodeAction => ({\n  type: routeNodeActionTypes.ADD_NODE,\n  payload,\n})\n\nexport default { routeNodeAddAction }\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport ActionCreators from './store/actions'\nimport type { RootState } from './store'\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport const useActions = () => {\n  const dispatch = useDispatch()\n  return bindActionCreators(ActionCreators, dispatch)\n}\n","import React from 'react'\nexport const ThemeContext = React.createContext<ThemeContext>(\n  {} as ThemeContext,\n)\n","import React, { useContext } from 'react'\nimport style from './style.module.scss'\nimport { Link } from 'react-router-dom'\nimport { ThemeContext } from '../../themes'\nimport classNames from 'classnames'\n\ntype PropsTypes = {\n  nodes: Array<RouteTree>\n}\n\nconst LinkList = ({ nodes }: PropsTypes) => {\n  const { theme } = useContext(ThemeContext)\n  return (\n    <ul className={style.list}>\n      {nodes.map((node) => (\n        <Link\n          className={classNames(style.list__link, {\n            fb: theme === 'fb',\n            wa: theme === 'wa',\n          })}\n          key={node.route}\n          to={'.' + node.route}\n        >\n          {node.title}\n        </Link>\n      ))}\n    </ul>\n  )\n}\nexport default LinkList\n","import { Field, Form, Formik } from 'formik'\nimport React, { useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport { Link, useLocation } from 'react-router-dom'\nimport { useActions } from '../../hooks'\nimport style from './style.module.scss'\nimport LinkList from '../LinkList'\nimport { ThemeContext } from '../../themes'\n\ntype PropsTypes = RouteTree\n\ntype FormValues = {\n  route: string\n  title: string\n}\n\nfunction Card(node: PropsTypes) {\n  const [theme, setTheme] = useState<Theme>('fb')\n  const loaction = useLocation()\n  const { routeNodeAddAction } = useActions()\n  const initialValues: FormValues = { route: '', title: '' }\n\n  useEffect(() => {\n    setTheme(node.nodes.length === 0 ? 'fb' : 'wa')\n  }, [node, setTheme])\n\n  return (\n    <ThemeContext.Provider value={{ theme }}>\n      <div className={style.card}>\n        <h1 className={style.head}>{node.title}</h1>\n        <Link\n          className={classNames(style.back, {\n            fb: theme === 'fb',\n            wa: theme === 'wa',\n          })}\n          to={loaction.pathname.replace(node.route, '')}\n        >\n          Back\n        </Link>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={(values, actions) => {\n            console.log({ values, actions })\n            actions.setSubmitting(false)\n            actions.resetForm()\n            routeNodeAddAction({\n              path: loaction.pathname,\n              newNode: {\n                route: '/' + values.route,\n                nodes: [],\n                title: values.title,\n              },\n            })\n          }}\n        >\n          <Form className={style.form}>\n            <Field\n              className={style.form__input}\n              id='route'\n              name='route'\n              placeholder='Route'\n            />\n            <Field\n              className={style.form__input}\n              id='title'\n              name='title'\n              placeholder='Title'\n            />\n            <button\n              className={classNames(style.form__submit, {\n                fb: theme === 'fb',\n                wa: theme === 'wa',\n              })}\n              type='submit'\n            >\n              Add Node\n            </button>\n          </Form>\n        </Formik>\n        <h1 className={style.head}>Nodes</h1>\n        <LinkList nodes={node.nodes} />\n      </div>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default Card\n","export default class Tree {\n  tree: RouteTree\n  constructor(tree: RouteTree) {\n    this.tree = tree\n  }\n\n  setRoutes() {\n    return Tree.setRoutes(this.tree, this.tree.route)\n  }\n\n  static setRoutes(\n    node: RouteTree,\n    path: string,\n    paths: Array<{ node: RouteTree; path: string }> = [],\n  ) {\n    node.nodes.forEach((node) => {\n      Tree.setRoutes(node, path + node.route, paths)\n    })\n    paths.push({\n      path,\n      node,\n    })\n    return paths\n  }\n}\n","import React from 'react'\nimport { HashRouter as Router, Navigate, Route, Routes } from 'react-router-dom'\nimport Card from './components/Card'\nimport Tree from './helper/Tree'\nimport { useAppSelector } from './hooks'\nimport './global.scss'\n\nfunction App() {\n  const routeTree = useAppSelector((state) => state)\n  const tree = new Tree(routeTree)\n  const routes = tree.setRoutes()\n  console.log(routes)\n  return (\n    <>\n      <Router>\n        <Routes>\n          <Route path='/' element={<Navigate replace to='/main' />} />\n          <Route path={routeTree.route} element={<Card {...routeTree} />} />\n          {routes.map(({ path, node }) => (\n            <Route key={path} path={path} element={<Card {...node} />} />\n          ))}\n          <Route path='*' element={<h1>404 Not Found</h1>} />\n        </Routes>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import produce from 'immer'\nimport { routeNodeAction } from './types'\n\nconst defaultState: RouteTree = {\n  route: '/main',\n  nodes: [\n    {\n      route: '/title',\n      nodes: [\n        { route: '/text', nodes: [], title: 'text' },\n        { route: '/text2', nodes: [], title: 'text2' },\n      ],\n      title: 'title',\n    },\n  ],\n  title: 'Main',\n}\n\nconst routeNodeRuducer = (\n  state: RouteTree = defaultState,\n  action: routeNodeAction,\n) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case 'ADD_NODE':\n        const { path, newNode } = action.payload\n        const routes = path.substring(1).split('/')\n\n        const addNodeToTree = (\n          node: RouteTree,\n          routes: Array<string>,\n          newNode: RouteTree,\n          depth = 1,\n        ) => {\n          if (depth === routes.length) {\n            const isNodeInTree = node.nodes.find(\n              (node) => node.route === newNode.route,\n            )\n            if (isNodeInTree) {\n              alert('This node is already in the tree')\n            } else {\n              node.nodes.push(newNode)\n            }\n          } else {\n            const currentRoute = routes[depth]\n            node.nodes.forEach((node) => {\n              if (node.route.substring(1) === currentRoute) {\n                depth += 1\n                addNodeToTree(node, routes, newNode, depth)\n              }\n            })\n          }\n        }\n        addNodeToTree(draft, routes, newNode)\n        break\n      default:\n        return draft\n    }\n  })\n\nexport default routeNodeRuducer\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware()),\n)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__cC_9C\",\"head\":\"style_head__3BLPN\",\"back\":\"style_back__3TUXU\",\"form\":\"style_form__2_314\",\"form__input\":\"style_form__input__3HGG3\",\"form__submit\":\"style_form__submit__25Dmi\"};"],"sourceRoot":""}