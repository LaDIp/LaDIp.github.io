{"version":3,"sources":["components/GameStat/style.module.scss","components/Card/style.module.scss","components/Game/style.module.scss","components/Grid/style.module.scss","components/StartForm/style.module.scss","redux/actions/gameActions.tsx","redux/actions/gridActions.tsx","redux/actions/index.ts","hooks.ts","components/Card/index.tsx","components/Grid/index.tsx","components/StartForm/index.jsx","components/Game/index.jsx","components/GameStat/index.jsx","App.tsx","redux/types/gridTypes.ts","redux/reducers/gridReducer.tsx","redux/types/gameTypes.ts","redux/reducers/gameReducer.tsx","redux/reducers/index.tsx","redux/store.tsx","index.tsx","App.module.scss"],"names":["module","exports","startGameAction","payload","type","endGameAction","restartGameAction","newGameAction","incMovesAction","generateGridAction","resetGridAction","compareCardAction","flipCardAction","actions","gameActions","gridActions","useAppSelector","useSelector","useActions","dispatch","useDispatch","bindActionCreators","ActionCreators","Card","card","onClick","className","classNames","style","card_flip","event","card__front","card__back","card__back_open","value","Grid","grid","cardOnClick","map","col","colIndex","grid__row","row","rowIndex","StartGame","form","initialValues","typeCards","size","onSubmit","values","setSubmitting","radioGroup","radioGroup__head","button","button_radio","name","button_start","Game","game","React","useState","flippedCards","setFlippedCards","setOpenedCard","game_4","game_6","game_8","push","length","forEach","openedCard","slice","GameStat","time","setTime","useEffect","interval","setInterval","isEnd","clearInterval","restart","stat","plate","plate__title","plate__text","moves","Math","floor","App","GridActionTypes","state","wrapper","header","logo","isStart","button_restart","sqrt","button_newgame","main","StartForm","gameover","GameActionTypes","defaultState","icons","gridReducer","action","GENERATE_GRID","typeCard","Array","fill","item","index","sort","random","concat","console","log","i","j","id","toString","shift","RESET_GRID","COMPARE_CARD","FLIP_CARD","gameReducer","START_GAME","Number","END_GAME","NEW_GAME","RESTART_GAME","INC_MOVES","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa49f599.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat\":\"style_stat__2xjbK\",\"plate\":\"style_plate__19VLn\",\"plate__title\":\"style_plate__title__IBBqI\",\"plate__text\":\"style_plate__text__3IS6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__32c7j\",\"card_flip\":\"style_card_flip__1aqEL\",\"card__front\":\"style_card__front__2JN-X\",\"card__back\":\"style_card__back__UFIGX\",\"card__back_open\":\"style_card__back_open__2fL4M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"style_game__3kib4\",\"game_4\":\"style_game_4__237ni\",\"game_6\":\"style_game_6__MmuJO\",\"game_8\":\"style_game_8__2bUI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid__row\":\"style_grid__row__7WyFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__MSMZj\",\"radioGroup\":\"style_radioGroup__3TmEQ\",\"radioGroup__head\":\"style_radioGroup__head__2VJLK\",\"button\":\"style_button__LhkFA\",\"button_start\":\"style_button_start__2q9A6\",\"button_radio\":\"style_button_radio__1fRSC\"};","const startGameAction = (payload: Object) => ({\n  type: 'START_GAME',\n  payload,\n})\n\nconst endGameAction = () => ({\n  type: 'END_GAME',\n})\nconst restartGameAction = () => ({\n  type: 'RESTART_GAME',\n})\n\nconst newGameAction = () => ({\n  type: 'NEW_GAME',\n})\n\nconst incMovesAction = () => ({\n  type: 'INC_MOVES',\n})\n\nexport {\n  startGameAction,\n  endGameAction,\n  newGameAction,\n  restartGameAction,\n  incMovesAction,\n}\n","const generateGridAction = (payload: Object) => ({\n  type: 'GENERATE_GRID',\n  payload,\n})\nconst resetGridAction = () => ({\n  type: 'RESET_GRID',\n})\nconst compareCardAction = (payload: Array<ICard>) => ({\n  type: 'COMPARE_CARD',\n  payload,\n})\nconst flipCardAction = (payload: ICard) => ({\n  type: 'FLIP_CARD',\n  payload,\n})\n\nexport {\n  generateGridAction,\n  compareCardAction,\n  flipCardAction,\n  resetGridAction,\n}\n","import * as gameActions from './gameActions'\nimport * as gridActions from './gridActions'\n\nconst actions = { ...gameActions, ...gridActions }\n\nexport default actions\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport ActionCreators from './redux/actions'\nimport type { RootState } from './redux/store'\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport const useActions = () => {\n  const dispatch = useDispatch()\n  return bindActionCreators(ActionCreators, dispatch)\n}\n","import classNames from 'classnames'\nimport React, { MouseEvent } from 'react'\nimport { useActions } from '../../hooks'\nimport style from './style.module.scss'\n\ntype CardProps = {\n  card: ICard\n  onClick: (card: ICard) => void\n}\n\nfunction Card({ card, onClick }: CardProps) {\n  const { flipCardAction } = useActions()\n  const handleClick = (event: MouseEvent<HTMLElement>) => {\n    if (card.type === 'hide') {\n      flipCardAction(card)\n      onClick(card)\n    }\n  }\n  return (\n    <div\n      className={classNames(style.card, {\n        [style.card_flip]: card.type !== 'hide',\n      })}\n      onClick={handleClick}\n    >\n      <span className={style.card__front}></span>\n      <span\n        className={classNames(\n          style.card__back,\n\n          {\n            [style.card__back_open]: card.type === 'open',\n            'material-icons material-icons-outlined':\n              typeof card.value === 'string',\n          },\n        )}\n      >\n        {card.value}\n      </span>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\r\nimport style from './style.module.scss'\r\nimport { Card } from '..'\r\n\r\ninterface GridProps {\r\n  grid: Grid\r\n  onClick: (card: ICard) => void\r\n}\r\n\r\nconst Grid: React.FC<GridProps> = ({ grid, onClick }) => {\r\n  const cardOnClick = (card: ICard) => {\r\n    onClick(card)\r\n  }\r\n\r\n  return (\r\n    <div className={style.grid}>\r\n      {grid.map((col, colIndex) => (\r\n        <div key={colIndex} className={style.grid__row}>\r\n          {col.map((row, rowIndex) => (\r\n            <Card\r\n              key={`${colIndex}_${rowIndex}`}\r\n              card={row}\r\n              onClick={cardOnClick}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import React from 'react'\nimport { useActions } from '../../hooks'\nimport { Formik, Form, Field } from 'formik'\nimport style from './style.module.scss'\nimport classNames from 'classnames'\n\ninterface StartFormValues {\n  typeCards: string;\n  gridSize: numbers;\n}\n\nfunction StartGame() {\n  const initialValues: StartFormValues = { typeCards: 'Numbers', size: '4' }\n  const { startGameAction, generateGridAction } = useActions()\n  return (\n    <div className={style.form}>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          startGameAction(values)\n          generateGridAction(values)\n          actions.setSubmitting(false)\n        }}\n      >\n        <Form>\n          <div className={style.radioGroup}>\n            <h4 className={style.radioGroup__head}>Select theme</h4>\n            <label className={classNames(style.button, style.button_radio)}>\n              <Field type='radio' name='typeCards' value='Numbers' />\n              <span>Numbers</span>\n            </label>\n            <label className={classNames(style.button, style.button_radio)}>\n              <Field type='radio' name='typeCards' value='Icons' />\n              <span>Icons</span>\n            </label>\n          </div>\n          <div className={style.radioGroup}>\n            <h4 className={style.radioGroup__head}>Select size</h4>\n            <label className={classNames(style.button, style.button_radio)}>\n              <Field type='radio' name='size' value='4' />\n              <span>4x4</span>\n            </label>\n            <label className={classNames(style.button, style.button_radio)}>\n              <Field type='radio' name='size' value='6' />\n              <span>6x6</span>\n            </label>\n            <label className={classNames(style.button, style.button_radio)}>\n              <Field type='radio' name='size' value='8' />\n              <span>8x8</span>\n            </label>\n          </div>\n          <button\n            className={classNames(style.button, style.button_start)}\n            type='submit'\n          >\n            Start game\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  )\n}\n\nexport default StartGame\n","import React from 'react'\r\nimport style from './style.module.scss'\r\nimport { GameStat, Grid } from '..'\r\nimport { useActions } from '../../hooks'\r\nimport classNames from 'classnames'\r\n\r\ntype GameProps = {\r\n  game: Object,\r\n  grid: Grid,\r\n}\r\n\r\nconst Game: React.FC<GameProps> = ({ game, grid }) => {\r\n  const [flippedCards, setFlippedCards] = React.useState([])\r\n  const [openedCard, setOpenedCard] = React.useState(0)\r\n  const { incMovesAction, compareCardAction, endGameAction } = useActions()\r\n  const handleGridClick = (card) => {\r\n    incMovesAction()\r\n    flippedCards.push(card)\r\n    setFlippedCards(flippedCards)\r\n    if (flippedCards.length === 2) {\r\n      compareCardAction(flippedCards)\r\n      flippedCards.forEach((card) => {\r\n        if (card.type === 'open')\r\n          setOpenedCard((openedCard) => {\r\n            if (openedCard + 1 === game.size) {\r\n              endGameAction()\r\n              return 0\r\n            }\r\n            return openedCard + 1\r\n          })\r\n      })\r\n    }\r\n    if (flippedCards.length === 3) {\r\n      compareCardAction(flippedCards)\r\n      setFlippedCards(flippedCards.slice(-1))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classNames(style.game, {\r\n        [style.game_4]: game.size === 16,\r\n        [style.game_6]: game.size === 36,\r\n        [style.game_8]: game.size === 64,\r\n      })}\r\n    >\r\n      <Grid grid={grid} onClick={handleGridClick} />\r\n      <GameStat game={game} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\r\nimport style from './style.module.scss'\r\n\r\ntype GameStatProps = {\r\n  game: Object,\r\n}\r\n\r\nconst GameStat: React.FC<GameStatProps> = ({ game }) => {\r\n  const [time, setTime] = React.useState(0)\r\n  React.useEffect(() => {\r\n    let interval = setInterval(() => setTime((time) => time + 1), 1000)\r\n    if (game.isEnd) clearInterval(interval)\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [game.isEnd])\r\n\r\n  React.useEffect(() => {\r\n    setTime(0)\r\n  }, [game.restart])\r\n\r\n  return (\r\n    <div className={style.stat}>\r\n      <div className={style.plate}>\r\n        <p className={style.plate__title}>Moves</p>\r\n        <p className={style.plate__text}>{game.moves}</p>\r\n      </div>\r\n      <div className={style.plate}>\r\n        <p className={style.plate__title}>Time</p>\r\n        <p className={style.plate__text}>\r\n          {Math.floor((time % 3600) / 60)}:\r\n          {Math.floor((time % 3600) % 60) < 10\r\n            ? `0${Math.floor((time % 3600) % 60)}`\r\n            : Math.floor((time % 3600) % 60)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameStat\r\n","import React from 'react'\r\nimport { Game, StartForm } from './components'\r\nimport { useActions, useAppSelector } from './hooks'\r\nimport { RootState } from './redux/store'\r\nimport style from './App.module.scss'\r\nimport classNames from 'classnames'\r\n\r\nfunction App() {\r\n  const grid = useAppSelector((state: RootState) => state.grid)\r\n  const game = useAppSelector((state: RootState) => state.game)\r\n  const {\r\n    restartGameAction,\r\n    generateGridAction,\r\n    startGameAction,\r\n    newGameAction,\r\n  } = useActions()\r\n\r\n  const handleRestart = () => {\r\n    restartGameAction()\r\n    generateGridAction({\r\n      typeCards: game.typeCards,\r\n      size: Math.sqrt(game.size),\r\n    })\r\n    startGameAction({\r\n      typeCards: game.typeCards,\r\n      size: Math.sqrt(game.size),\r\n    })\r\n  }\r\n\r\n  const handleNewGame = () => {\r\n    newGameAction()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={style.wrapper}>\r\n        <header className={style.header}>\r\n          <span className={style.logo}>memory</span>\r\n          {game.isStart && (\r\n            <>\r\n              <button\r\n                className={classNames(style.button, style.button_restart)}\r\n                onClick={handleRestart}\r\n              >\r\n                Restart\r\n              </button>\r\n              <button\r\n                className={classNames(style.button, style.button_newgame)}\r\n                onClick={handleNewGame}\r\n              >\r\n                New Game\r\n              </button>\r\n            </>\r\n          )}\r\n        </header>\r\n        <main className={style.main}>\r\n          {game.isStart ? <Game game={game} grid={grid} /> : <StartForm />}\r\n          {game.isEnd && <span className={style.gameover}>GAME OVER</span>}\r\n        </main>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","export type gridState = Grid\n\nexport enum GridActionTypes {\n  GENERATE_GRID = 'GENERATE_GRID',\n  RESET_GRID = 'RESET_GRID',\n  COMPARE_CARD = 'COMPARE_CARD',\n  FLIP_CARD = 'FLIP_CARD',\n}\n\ninterface generateGridAction {\n  type: GridActionTypes.GENERATE_GRID\n  payload: {\n    typeCards: string\n    size: number\n  }\n}\n\ninterface resetGridAction {\n  type: GridActionTypes.RESET_GRID\n}\n\ninterface compareCardAction {\n  type: GridActionTypes.COMPARE_CARD\n  payload: Array<ICard>\n}\n\ninterface flipCardAction {\n  type: GridActionTypes.FLIP_CARD\n  payload: ICard\n}\n\nexport type GridAction =\n  | generateGridAction\n  | resetGridAction\n  | compareCardAction\n  | flipCardAction\n","import { gridState, GridActionTypes, GridAction } from '../types/gridTypes'\r\n\r\nconst defaultState: gridState = []\r\n\r\nconst icons: Array<string> = [\r\n  'favorite_border',\r\n  'schedule',\r\n  'lightbulb',\r\n  'sports_soccer',\r\n  'grade',\r\n  'pets',\r\n  'flutter_dash',\r\n  'offline_bolt',\r\n  'settings',\r\n  'build',\r\n  'sports_esports',\r\n  'add_circle_outline',\r\n  'shield',\r\n  'notifications',\r\n  'public',\r\n  'sentiment_satisfied',\r\n  'straighten',\r\n  'back_hand',\r\n  'workspace_premium',\r\n  'catching_pokemon',\r\n  'sports_basketball',\r\n  'sports_motorsports',\r\n  'cookie',\r\n  'party_mode',\r\n  'ice_skating',\r\n  'hive',\r\n  'edit', //27\r\n  'palette',\r\n  'remove_red_eye',\r\n  'audiotrack',\r\n  'phone',\r\n  'vpn_key', //32\r\n]\r\n\r\nconst gridReducer = (state = defaultState, action: GridAction): gridState => {\r\n  switch (action.type) {\r\n    case GridActionTypes.GENERATE_GRID:\r\n      const typeCard = action.payload.typeCards\r\n      const size = action.payload.size\r\n      let values: Array<number | string> = Array((size * size) / 2).fill(0)\r\n      if (typeCard === 'Numbers') values = values.map((item, index) => index)\r\n      if (typeCard === 'Icons') {\r\n        values.sort(() => Math.random() - 0.5)\r\n        values = values.map((item, index) => icons[index])\r\n      }\r\n      values = values.concat(values)\r\n      values.sort(() => Math.random() - 0.5)\r\n      console.log(values)\r\n      let grid: gridState = []\r\n      for (let i = 0; i < size; i++) {\r\n        let row = []\r\n        for (let j = 0; j < size; j++) {\r\n          row.push({\r\n            id: Math.random().toString(),\r\n            value: values[0],\r\n            type: 'hide',\r\n          })\r\n          values.shift()\r\n        }\r\n        grid.push(row)\r\n      }\r\n      console.log(grid)\r\n      return grid\r\n    case GridActionTypes.RESET_GRID:\r\n      return defaultState\r\n    case GridActionTypes.COMPARE_CARD:\r\n      console.log(action.payload)\r\n      return state.map((row) =>\r\n        row.map((card) => {\r\n          if (action.payload[0].value === action.payload[1].value) {\r\n            if (card.id === action.payload[0].id) card.type = 'open'\r\n            if (card.id === action.payload[1].id) card.type = 'open'\r\n          } else {\r\n            if (action.payload.length === 3) {\r\n              if (card.id === action.payload[0].id) card.type = 'hide'\r\n              if (card.id === action.payload[1].id) card.type = 'hide'\r\n            }\r\n          }\r\n          return card\r\n        }),\r\n      )\r\n    case GridActionTypes.FLIP_CARD:\r\n      return state.map((row) =>\r\n        row.map((card) => {\r\n          if (card.id === action.payload.id) card.type = 'flip'\r\n          return card\r\n        }),\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default gridReducer\r\n","export interface gameState {\n  isStart: boolean\n  isEnd: boolean\n  restart: number\n  typeCards: string\n  size: number\n  moves: number\n  openedCard: number\n}\n\nexport enum GameActionTypes {\n  START_GAME = 'START_GAME',\n  END_GAME = 'END_GAME',\n  NEW_GAME = 'NEW_GAME',\n  RESTART_GAME = 'RESTART_GAME',\n  INC_MOVES = 'INC_MOVES',\n}\n\ninterface startGameAction {\n  type: GameActionTypes.START_GAME\n  payload: {\n    typeCards: string\n    size: number\n  }\n}\n\ninterface endGameAction {\n  type: GameActionTypes.END_GAME\n}\n\ninterface newGameAction {\n  type: GameActionTypes.NEW_GAME\n}\n\ninterface restartGameAction {\n  type: GameActionTypes.RESTART_GAME\n}\n\ninterface incMovesAction {\n  type: GameActionTypes.INC_MOVES\n}\n\nexport type GameAction =\n  | startGameAction\n  | endGameAction\n  | newGameAction\n  | restartGameAction\n  | incMovesAction\n","import { gameState, GameActionTypes, GameAction } from '../types/gameTypes'\r\n\r\nconst defaultState: gameState = {\r\n  isStart: false,\r\n  isEnd: false,\r\n  restart: 0,\r\n  typeCards: '',\r\n  size: 4,\r\n  moves: 0,\r\n  openedCard: 0,\r\n}\r\n\r\nconst gameReducer = (state = defaultState, action: GameAction): gameState => {\r\n  switch (action.type) {\r\n    case GameActionTypes.START_GAME:\r\n      return {\r\n        ...state,\r\n        isStart: true,\r\n        isEnd: false,\r\n        typeCards: action.payload.typeCards,\r\n        size: Number(action.payload.size) * Number(action.payload.size),\r\n        moves: 0,\r\n        openedCard: 0,\r\n      }\r\n    case GameActionTypes.END_GAME:\r\n      return { ...state, isEnd: true }\r\n    case GameActionTypes.NEW_GAME:\r\n      return defaultState\r\n    case GameActionTypes.RESTART_GAME:\r\n      return { ...state, restart: state.restart + 1 }\r\n    case GameActionTypes.INC_MOVES:\r\n      return { ...state, moves: state.moves + 1 }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default gameReducer\r\n","import { combineReducers } from 'redux'\nimport { default as gridReducer } from './gridReducer'\nimport { default as gameReducer } from './gameReducer'\n\nconst rootReducer = combineReducers({ grid: gridReducer, game: gameReducer })\n\nexport default rootReducer\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware()))\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport { store }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__206vP\",\"header\":\"App_header__3NsA_\",\"main\":\"App_main__A6bRk\",\"logo\":\"App_logo__1DOMR\",\"button\":\"App_button__2YUVb\",\"button_restart\":\"App_button_restart__3eHzo\",\"button_newgame\":\"App_button_newgame__29d4P\",\"plate\":\"App_plate__1QI8k\",\"plate__title\":\"App_plate__title__2Yenn\",\"plate__text\":\"App_plate__text__2UDIB\",\"gameover\":\"App_gameover__1wjyy\"};"],"sourceRoot":""}