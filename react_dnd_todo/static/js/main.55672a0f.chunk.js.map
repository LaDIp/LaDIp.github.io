{"version":3,"sources":["Column/Column.module.css","App.module.css","Card/Card.module.css","const.js","Card/Card.js","CardForm/CardForm.js","Column/Column.js","App.js","store/index.js","store/boardReducer.js","index.js","CardForm/CardForm.module.css"],"names":["module","exports","defaultState","id","title","list","text","ADD_CARD","DELETE_CARD","ADD_COLUMN","DELETE_COLUMN","REORDER_CARDS","SET_TITLE","Card","item","columnId","index","dispatch","useDispatch","deleteCard","type","payload","cardId","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","className","style","card","button","onClick","CardForm","columnID","useSelector","state","board","useState","formVisible","setFormVisible","cardText","setCardText","wrapper","inputCard","placeholder","value","onChange","target","addCard","Date","now","exitCard","createCard","Column","column","columnTitle","setColumnTitle","titleColumn","onBlur","rows","deleteColumn","droppableId","droppableProps","map","App","onDragEnd","source","destination","sourceColumn","sourceIndex","destinationColumn","destinationIndex","addButton","store","createStore","action","col","forEach","splice","removed","filter","console","log","ReactDOM","render","document","getElementById"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,OAAS,uBAAuB,YAAc,4BAA4B,aAAe,+B,mBCA7KD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,UAAY,yB,mBCAzDD,EAAOC,QAAU,CAAC,KAAO,qB,gICDZC,EAAe,CAC1B,CACEC,GAAI,WACJC,MAAO,SACPC,KAAM,CAAC,CAAEF,GAAI,SAAUG,KAAM,oCAE/B,CACEH,GAAI,WACJC,MAAO,OACPC,KAAM,CACJ,CACEF,GAAI,SACJG,KAAM,0DAMDC,EAAW,WACXC,EAAc,cACdC,EAAa,aACbC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAY,Y,OCaVC,MA7Bf,YAA0C,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MACxBC,EAAWC,cAEXC,EAAa,WACjBF,EAAS,CACPG,KAAMZ,EACNa,QAAS,CAAEN,SAAUA,EAAUO,OAAQR,EAAKX,OAIhD,OACE,cAAC,IAAD,CAAWoB,YAAaT,EAAKX,GAAIa,MAAOA,EAAxC,SACG,SAAAQ,GAAQ,OACP,2DACMA,EAASC,gBACTD,EAASE,iBAFf,IAGEC,IAAKH,EAASI,SACdC,UAAWC,IAAMC,KACjB5B,GAAIW,EAAKX,GALX,UAME,4BAAIW,EAAKR,OACT,wBAAQuB,UAAWC,IAAME,OAAQC,QAASd,EAA1C,uB,gBCmCKe,MAtDf,YAA8B,IAAXC,EAAU,EAAVA,SACXlB,EAAWC,cAGjB,GAFckB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAEHC,oBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KA2BA,OACE,mCACCH,EACD,sBAAKX,UAAWC,IAAMc,QAAtB,UACE,0BACEf,UAAWC,IAAMe,UACjBzB,KAAK,OACL0B,YAAY,+IACZC,MAASL,EACTM,SA9BW,SAAC,GAAuB,IAAbD,EAAY,EAArBE,OAASF,MAC1BJ,EAAYI,MA+BV,wBAAQlB,UAAWC,IAAMoB,QAASjB,QAvBtB,WAGd,GAFAQ,GAAe,GACfE,EAAY,IACI,IAAZD,EAAJ,CAEA,IAAMX,EAAO,CACT5B,GAAG,QAAD,OAAUgD,KAAKC,OACjB9C,KAAMoC,GAEVzB,EAAS,CAACG,KAAMb,EAAUc,QAAS,CAAClB,GAAIgC,EAAUJ,KAAMA,OActD,+GACA,wBAAQF,UAAWC,IAAMuB,SAAUpB,QA7BtB,SAAC,GAAsB,EAArBgB,OAASF,MAC1BJ,EAAY,IACZF,GAAe,IA2Bb,kBAGF,wBAAQZ,UAAWC,IAAMwB,WAAYrB,QAxCtB,WACfQ,GAAe,IAuCf,oH,iBCUWc,MAvDf,YAA0B,IAATC,EAAQ,EAARA,OACTvC,EAAWC,cAEjB,EAAsCqB,mBAASiB,EAAOpD,OAAtD,mBAAOqD,EAAP,KAAoBC,EAApB,KAgBA,OACE,sBAAK7B,UAAWC,IAAMc,QAAtB,UACE,0BACEf,UAAWC,IAAM6B,YACjBvC,KAAK,OACL0B,YAAY,+IACZC,MAASU,EACTT,SArBY,SAAC,GAAuB,IAAbD,EAAY,EAArBE,OAASF,MAC3BW,EAAeX,IAqBXa,OAlBW,WACfJ,EAAOpD,MAAQqD,EACfxC,EAAS,CAACG,KAAMR,EAAWS,QAAS,CAACmC,aAiBjCK,KAAM,IAER,wBAAQhC,UAAWC,IAAMgC,aAAc7B,QAhBtB,WACnBhB,EAAS,CAACG,KAAMV,EAAeW,QAASmC,EAAOrD,MAe7C,eACA,cAAC,IAAD,CAAWiB,KAAK,SAAS2C,YAAaP,EAAOrD,GAA7C,SACG,SAAAqB,GAAQ,OACP,6CACEG,IAAKH,EAASI,UACVJ,EAASwC,gBAFf,IAGEnC,UAAWC,IAAM0B,OAHnB,UAKGA,EAAOnD,KAAK4D,KAAI,SAACnD,EAAME,GAAP,OACf,cAAC,EAAD,CAEED,SAAUyC,EAAOrD,GACjBW,KAAMA,EACNE,MAAOA,GAHFF,EAAKX,OAKfqB,EAASsB,mBAId,cAAC,EAAD,CAAUX,SAAUqB,EAAOrD,SCElB+D,MAhDf,WACE,IAAMjD,EAAWC,cACXoB,EAAQF,aAAY,SAAAC,GAAK,OAAIA,KA+BnC,OACE,sBAAKR,UAAWC,IAAMQ,MAAtB,UACE,cAAC,IAAD,CAAiB6B,UAtBH,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,YACrBA,IAIHD,EAAOL,cAAgBM,EAAYN,aACnCK,EAAOpD,QAAUqD,EAAYrD,OAI/BC,EAAS,CAACG,KAAMT,EAAeU,QAC7B,CACEiD,aAAcF,EAAOL,YACrBQ,YAAaH,EAAOpD,MACpBwD,kBAAmBH,EAAYN,YAC/BU,iBAAkBJ,EAAYrD,WAOhC,SACGsB,EAAM2B,KAAI,SAAAT,GAAM,OACf,cAAC,EAAD,CAEEA,OAAQA,GADHA,EAAOrD,SAKlB,wBAAQ0B,UAAWC,IAAM4C,UAAWzC,QAvCtB,WAChB,IAAMuB,EAAS,CACbrD,GAAG,UAAD,OAAYgD,KAAKC,OACnBhD,MAAO,GACPC,KAAM,IAERY,EAAS,CAACG,KAAMX,EAAYY,QAASmC,KAiCnC,+G,eChDOmB,EAAQC,aCEO,WAAmC,IAAlCvC,EAAiC,uDAAzBnC,EAAc2E,EAAW,uCAC5D,OAAQA,EAAOzD,MACb,KAAKR,EACH,OAAOyB,EAAM4B,KAAI,SAAAa,GACf,OAAIA,EAAI3E,KAAO0E,EAAOxD,QAAQlB,GAAW0E,EAAOxD,QAAQmC,OAC5CsB,KAEhB,KAAKnE,EACH,IAAIyD,EAAS,GACTC,EAAc,GAClBhC,EAAM0C,SAAQ,SAAAD,GACRD,EAAOxD,QAAQiD,eAAiBQ,EAAI3E,KACtCiE,EAASU,GAEPD,EAAOxD,QAAQmD,oBAAsBM,EAAI3E,KAC3CkE,EAAcS,MAGlB,MAAkBV,EAAO/D,KAAK2E,OAAOH,EAAOxD,QAAQkD,YAAa,GAAjE,mBAAOU,EAAP,KAEA,OADAZ,EAAYhE,KAAK2E,OAAOH,EAAOxD,QAAQoD,iBAAkB,EAAGQ,GACrD5C,EAAM4B,KAAI,SAAAa,GACf,OAAIA,EAAI3E,IAAMiE,EAAOjE,GAAWiE,EAC5BU,EAAI3E,IAAMkE,EAAYlE,GAAWkE,EAC9BS,KAEX,KAAKrE,EACH,MAAM,GAAN,mBAAW4B,GAAX,CAAkBwC,EAAOxD,UAC3B,KAAKX,EACH,OAAO2B,EAAM6C,QAAO,SAAAJ,GAAG,OAAIA,EAAI3E,IAAM0E,EAAOxD,WAC9C,KAAKd,EACH,OAAO8B,EAAM4B,KAAI,SAAAa,GACf,OAAIA,EAAI3E,IAAM0E,EAAOxD,QAAQlB,GACpB,2BAAK2E,GAAZ,IAAiBzE,KAAK,GAAD,mBAAMyE,EAAIzE,MAAV,CAAgBwE,EAAOxD,QAAQU,SAC1C+C,KAEhB,KAAKtE,EAEH,OADA2E,QAAQC,IAAIP,GACLxC,EAAM4B,KAAI,SAAAa,GACf,OAAIA,EAAI3E,IAAM0E,EAAOxD,QAAQN,SACpB,2BACF+D,GADL,IAEEzE,KAAMyE,EAAIzE,KAAK6E,QAAO,SAAApE,GAAI,OAAIA,EAAKX,KAAO0E,EAAOxD,QAAQC,YAEjDwD,KAEhB,QACE,OAAOzC,MCjDbgD,IAASC,OACP,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFY,SAASC,eAAe,U,kBCV1BxF,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,UAAY,4BAA4B,WAAa,6BAA6B,QAAU,0BAA0B,SAAW,8B","file":"static/js/main.55672a0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Column_wrapper__6RSpk\",\"hidden\":\"Column_hidden__1aj1A\",\"column\":\"Column_column__xhyzx\",\"titleColumn\":\"Column_titleColumn__3ck0i\",\"deleteColumn\":\"Column_deleteColumn__3XkcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"App_board__3VfDh\",\"addButton\":\"App_addButton__3etbf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3NhfH\"};","export const defaultState = [\r\n  {\r\n    id: 'column-1',\r\n    title: 'Task#1',\r\n    list: [{ id: 'card-1', text: 'ead group of squamate reptiles' }],\r\n  },\r\n  {\r\n    id: 'column-2',\r\n    title: 'TODO',\r\n    list: [\r\n      {\r\n        id: 'card-2',\r\n        text: 'Lizards are a widespread group of squamate reptiles',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport const ADD_CARD = 'ADD_CARD'\r\nexport const DELETE_CARD = 'DELETE_CARD'\r\nexport const ADD_COLUMN = 'ADD_COLUMN'\r\nexport const DELETE_COLUMN = 'DELETE_COLUMN'\r\nexport const REORDER_CARDS = 'REORDER_CARDS'\r\nexport const SET_TITLE = 'SET_TITLE'\r\n","import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport style from './Card.module.css'\r\nimport { DELETE_CARD } from '../const'\r\n\r\nfunction Card({ item, columnId, index }) {\r\n  const dispatch = useDispatch()\r\n\r\n  const deleteCard = () => {\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: { columnId: columnId, cardId: item.id },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Draggable draggableId={item.id} index={index}>\r\n      {provided => (\r\n        <li\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          className={style.card}\r\n          id={item.id}>\r\n          <p>{item.text}</p>\r\n          <button className={style.button} onClick={deleteCard}>\r\n            X\r\n          </button>\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_CARD } from '../const';\r\n\r\nimport style from './CardForm.module.css'\r\n\r\n\r\nfunction CardForm({columnID}){\r\n  const dispatch = useDispatch()\r\n  const board = useSelector(state => state.board)\r\n\r\n  const [formVisible, setFormVisible] = useState(false)\r\n  const [cardText, setCardText] = useState('')\r\n  \r\n  const formShow = () => {\r\n    setFormVisible(true)\r\n  }\r\n\r\n  const editCard = ({target: {value}}) => {\r\n    setCardText(value)\r\n  }\r\n\r\n  const exitEdit = ({target: {value}}) => {\r\n    setCardText('')\r\n    setFormVisible(false)\r\n  }\r\n\r\n  const addCard = () => {\r\n    setFormVisible(false)\r\n    setCardText('')\r\n    if (cardText == '')\r\n      return\r\n    const card = {\r\n        id: `card-${Date.now()}`,\r\n        text: cardText\r\n      }\r\n    dispatch({type: ADD_CARD, payload: {id: columnID, card: card}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {formVisible ?\r\n    <div className={style.wrapper}>\r\n      <textarea \r\n        className={style.inputCard} \r\n        type=\"text\" \r\n        placeholder='Введите название карточки' \r\n        value = {cardText}\r\n        onChange = {editCard}\r\n        />\r\n      <button className={style.addCard} onClick={addCard}>Добавить карточку</button>\r\n      <button className={style.exitCard} onClick={exitEdit}>X</button>\r\n    </div>\r\n    :\r\n    <button className={style.createCard} onClick={formShow}>+ Добавить карточку</button>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default CardForm;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Card from '../Card/Card'\r\nimport CardForm from '../CardForm/CardForm'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport style from './Column.module.css'\r\nimport { SET_TITLE, DELETE_COLUMN } from '../const';\r\n\r\n\r\nfunction Column({column}){\r\n  const dispatch = useDispatch()\r\n  \r\n  const [columnTitle, setColumnTitle] = useState(column.title)\r\n\r\n  const editTitle = ({target: {value}}) => {\r\n    setColumnTitle(value)\r\n  }\r\n\r\n  const setTitle = () => {\r\n    column.title = columnTitle\r\n    dispatch({type: SET_TITLE, payload: {column}})\r\n  }\r\n\r\n  const deleteColumn = () => {\r\n    dispatch({type: DELETE_COLUMN, payload: column.id})\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <textarea \r\n        className={style.titleColumn}\r\n        type=\"text\" \r\n        placeholder='Введите название карточки' \r\n        value = {columnTitle}\r\n        onChange = {editTitle}\r\n        onBlur={setTitle}\r\n        rows={1}\r\n        />\r\n      <button className={style.deleteColumn} onClick={deleteColumn}>X</button>\r\n      <Droppable type=\"COLUMN\" droppableId={column.id}>\r\n        {provided=>(\r\n          <ul \r\n            ref={provided.innerRef} \r\n            {...provided.droppableProps}\r\n            className={style.column}\r\n          >\r\n            {column.list.map((item, index) =>\r\n              <Card\r\n                key={item.id}\r\n                columnId={column.id}\r\n                item={item}\r\n                index={index}/>\r\n            )}\r\n          {provided.placeholder}\r\n          </ul>\r\n        )}\r\n      </Droppable>\r\n      <CardForm columnID={column.id}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Column;\r\n\r\n\r\n","import React from 'react';\nimport style from './App.module.css';\nimport Column from './Column/Column';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport {\n  ADD_COLUMN,\n  REORDER_CARDS\n} from './const'\n\n\n\nfunction App() {\n  const dispatch = useDispatch()\n  const board = useSelector(state => state)\n\n  const addColumn = () => {\n    const column = { \n      id: `column-${Date.now()}`,\n      title: '',\n      list: []\n    }\n    dispatch({type: ADD_COLUMN, payload: column})\n  }\n  \n  const onDragEnd = ({source, destination}) =>{\n    if (!destination) {\n      return;\n    }\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n    dispatch({type: REORDER_CARDS, payload: \n      {\n        sourceColumn: source.droppableId, \n        sourceIndex: source.index, \n        destinationColumn: destination.droppableId,\n        destinationIndex: destination.index\n      }\n    })\n  }\n\n  return (\n    <div className={style.board}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        {board.map(column =>\n          <Column\n            key={column.id} \n            column={column}\n          />\n        )}\n      </DragDropContext>\n      <button className={style.addButton} onClick={addColumn}>+ Добавить колонку</button>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers } from \"redux\";\r\nimport { boardReducer } from './boardReducer' \r\n\r\n\r\n// const rootReducer = combineReducers({\r\n//   board: boardReducer\r\n// })\r\n\r\nexport const store = createStore(boardReducer)","import {\r\n  defaultState,\r\n  ADD_COLUMN,\r\n  DELETE_COLUMN,\r\n  ADD_CARD,\r\n  SET_TITLE,\r\n  REORDER_CARDS,\r\n  DELETE_CARD,\r\n} from '../const'\r\n\r\nexport const boardReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SET_TITLE:\r\n      return state.map(col => {\r\n        if (col.id === action.payload.id) return action.payload.column\r\n        else return col\r\n      })\r\n    case REORDER_CARDS:\r\n      let source = {}\r\n      let destination = {}\r\n      state.forEach(col => {\r\n        if (action.payload.sourceColumn === col.id) {\r\n          source = col\r\n        }\r\n        if (action.payload.destinationColumn === col.id) {\r\n          destination = col\r\n        }\r\n      })\r\n      const [removed] = source.list.splice(action.payload.sourceIndex, 1)\r\n      destination.list.splice(action.payload.destinationIndex, 0, removed)\r\n      return state.map(col => {\r\n        if (col.id == source.id) return source\r\n        if (col.id == destination.id) return destination\r\n        return col\r\n      })\r\n    case ADD_COLUMN:\r\n      return [...state, action.payload]\r\n    case DELETE_COLUMN:\r\n      return state.filter(col => col.id != action.payload)\r\n    case ADD_CARD:\r\n      return state.map(col => {\r\n        if (col.id == action.payload.id)\r\n          return { ...col, list: [...col.list, action.payload.card] }\r\n        else return col\r\n      })\r\n    case DELETE_CARD:\r\n      console.log(action)\r\n      return state.map(col => {\r\n        if (col.id == action.payload.columnId)\r\n          return {\r\n            ...col,\r\n            list: col.list.filter(item => item.id !== action.payload.cardId),\r\n          }\r\n        else return col\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from \"./store\"\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardForm_card__1KK5N\",\"wrapper\":\"CardForm_wrapper__14j4j\",\"inputCard\":\"CardForm_inputCard__33hCS\",\"createCard\":\"CardForm_createCard__3HVkc\",\"addCard\":\"CardForm_addCard__2W9Kc\",\"exitCard\":\"CardForm_exitCard__1-QDV\"};"],"sourceRoot":""}