{"version":3,"sources":["Column/Column.module.css","App.module.css","Card/Card.module.css","Card/Card.js","const.js","CardForm/CardForm.js","Column/Column.js","App.js","store/index.js","store/boardReducer.js","index.js","CardForm/CardForm.module.css"],"names":["module","exports","Card","item","index","columnId","draggableId","id","provided","draggableProps","dragHandleProps","ref","innerRef","className","style","card","text","defaultState","title","list","ADD_CARD","ADD_COLUMN","DELETE_COLUMN","REORDER_CARDS","SET_TITLE","CardForm","columnID","dispatch","useDispatch","useSelector","state","board","useState","formVisible","setFormVisible","cardText","setCardText","wrapper","inputCard","type","placeholder","value","onChange","target","addCard","onClick","Date","now","payload","exitCard","createCard","Column","column","columnTitle","setColumnTitle","titleColumn","onBlur","rows","deleteColumn","droppableId","droppableProps","map","App","onDragEnd","source","destination","sourceColumn","sourceIndex","destinationColumn","destinationIndex","addButton","store","createStore","action","col","forEach","splice","removed","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.714d9c10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Column_wrapper__6RSpk\",\"hidden\":\"Column_hidden__1aj1A\",\"column\":\"Column_column__xhyzx\",\"titleColumn\":\"Column_titleColumn__3ck0i\",\"deleteColumn\":\"Column_deleteColumn__3XkcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"App_board__3VfDh\",\"addButton\":\"App_addButton__3etbf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3NhfH\"};","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport style from './Card.module.css'\r\n\r\nfunction Card({item, columnId, index}){\r\n  return (\r\n    <Draggable draggableId={item.id} index={index}>\r\n      {provided=>(\r\n        <li \r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          className={style.card} \r\n          id={item.id}\r\n        >\r\n          {item.text}\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n\r\n\r\nexport default Card;\r\n\r\n\r\n","export const defaultState = [\r\n  {\r\n    id: \"column-1\",\r\n    title: \"Task#1\",\r\n    list: [\r\n      {id: \"card-1\", text: \"ead group of squamate reptiles\"}\r\n    ]\r\n  },\r\n  {\r\n    id: \"column-2\",\r\n    title: \"TODO\",\r\n    list: [\r\n      {id: \"card-2\", text: \"Lizards are a widespread group of squamate reptiles\"}\r\n    ]\r\n  }\r\n]\r\n\r\nexport const ADD_CARD = 'ADD_CARD'\r\nexport const ADD_COLUMN = 'ADD_COLUMN'\r\nexport const DELETE_COLUMN = 'DELETE_COLUMN'\r\nexport const REORDER_CARDS = 'REORDER_CARDS'\r\nexport const SET_TITLE = 'SET_TITLE'\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_CARD } from '../const';\r\n\r\nimport style from './CardForm.module.css'\r\n\r\n\r\nfunction CardForm({columnID}){\r\n  const dispatch = useDispatch()\r\n  const board = useSelector(state => state.board)\r\n\r\n  const [formVisible, setFormVisible] = useState(false)\r\n  const [cardText, setCardText] = useState('')\r\n  \r\n  const formShow = () => {\r\n    setFormVisible(true)\r\n  }\r\n\r\n  const editCard = ({target: {value}}) => {\r\n    setCardText(value)\r\n  }\r\n\r\n  const exitEdit = ({target: {value}}) => {\r\n    setCardText('')\r\n    setFormVisible(false)\r\n  }\r\n\r\n  const addCard = () => {\r\n    setFormVisible(false)\r\n    setCardText('')\r\n    if (cardText == '')\r\n      return\r\n    const card = {\r\n        id: `card-${Date.now()}`,\r\n        text: cardText\r\n      }\r\n    dispatch({type: ADD_CARD, payload: {id: columnID, card: card}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {formVisible ?\r\n    <div className={style.wrapper}>\r\n      <textarea \r\n        className={style.inputCard} \r\n        type=\"text\" \r\n        placeholder='Введите название карточки' \r\n        value = {cardText}\r\n        onChange = {editCard}\r\n        />\r\n      <button className={style.addCard} onClick={addCard}>Добавить карточку</button>\r\n      <button className={style.exitCard} onClick={exitEdit}>X</button>\r\n    </div>\r\n    :\r\n    <button className={style.createCard} onClick={formShow}>+ Добавить карточку</button>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default CardForm;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Card from '../Card/Card'\r\nimport CardForm from '../CardForm/CardForm'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport style from './Column.module.css'\r\nimport { SET_TITLE, DELETE_COLUMN } from '../const';\r\n\r\n\r\nfunction Column({column}){\r\n  const dispatch = useDispatch()\r\n  \r\n  const [columnTitle, setColumnTitle] = useState(column.title)\r\n\r\n  const editTitle = ({target: {value}}) => {\r\n    setColumnTitle(value)\r\n  }\r\n\r\n  const setTitle = () => {\r\n    column.title = columnTitle\r\n    dispatch({type: SET_TITLE, payload: {column}})\r\n  }\r\n\r\n  const deleteColumn = () => {\r\n    dispatch({type: DELETE_COLUMN, payload: column.id})\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <textarea \r\n        className={style.titleColumn}\r\n        type=\"text\" \r\n        placeholder='Введите название карточки' \r\n        value = {columnTitle}\r\n        onChange = {editTitle}\r\n        onBlur={setTitle}\r\n        rows={1}\r\n        />\r\n      <button className={style.deleteColumn} onClick={deleteColumn}>X</button>\r\n      <Droppable type=\"COLUMN\" droppableId={column.id}>\r\n        {provided=>(\r\n          <ul \r\n            ref={provided.innerRef} \r\n            {...provided.droppableProps}\r\n            className={style.column}\r\n          >\r\n            {column.list.map((item, index) =>\r\n              <Card\r\n                key={item.id}\r\n                columnId={column.id}\r\n                item={item}\r\n                index={index}/>\r\n            )}\r\n          {provided.placeholder}\r\n          </ul>\r\n        )}\r\n      </Droppable>\r\n      <CardForm columnID={column.id}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Column;\r\n\r\n\r\n","import React from 'react';\nimport style from './App.module.css';\nimport Column from './Column/Column';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport {\n  ADD_COLUMN,\n  REORDER_CARDS\n} from './const'\n\n\n\nfunction App() {\n  const dispatch = useDispatch()\n  const board = useSelector(state => state)\n\n  const addColumn = () => {\n    const column = { \n      id: `column-${Date.now()}`,\n      title: '',\n      list: []\n    }\n    dispatch({type: ADD_COLUMN, payload: column})\n  }\n  \n  const onDragEnd = ({source, destination}) =>{\n    if (!destination) {\n      return;\n    }\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n    dispatch({type: REORDER_CARDS, payload: \n      {\n        sourceColumn: source.droppableId, \n        sourceIndex: source.index, \n        destinationColumn: destination.droppableId,\n        destinationIndex: destination.index\n      }\n    })\n  }\n\n  return (\n    <div className={style.board}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        {board.map(column =>\n          <Column\n            key={column.id} \n            column={column}\n          />\n        )}\n      </DragDropContext>\n      <button className={style.addButton} onClick={addColumn}>+ Добавить колонку</button>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers } from \"redux\";\r\nimport { boardReducer } from './boardReducer' \r\n\r\n\r\n// const rootReducer = combineReducers({\r\n//   board: boardReducer\r\n// })\r\n\r\nexport const store = createStore(boardReducer)","import {\r\n  defaultState,\r\n  ADD_COLUMN,\r\n  DELETE_COLUMN,\r\n  ADD_CARD,\r\n  SET_TITLE,\r\n  REORDER_CARDS\r\n} from '../const'\r\n\r\n\r\nexport const boardReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SET_TITLE:\r\n      return state.map(col => {\r\n        if (col.id === action.payload.id)\r\n          return action.payload.column\r\n        else\r\n          return col\r\n      }) \r\n    case REORDER_CARDS:  \r\n      let source = {}\r\n      let destination = {}\r\n      state.forEach((col) => {\r\n        if(action.payload.sourceColumn === col.id) {\r\n          source = col\r\n        }\r\n        if(action.payload.destinationColumn === col.id){\r\n          destination = col\r\n        }\r\n      }) \r\n      const [removed] = source.list.splice(action.payload.sourceIndex, 1)\r\n      destination.list.splice(action.payload.destinationIndex, 0, removed) \r\n      return state.map(col => {\r\n        if (col.id == source.id)\r\n          return source\r\n        if (col.id == destination.id)\r\n          return destination\r\n        return col\r\n      }) \r\n    case ADD_COLUMN:\r\n      return [...state, action.payload]\r\n    case DELETE_COLUMN:\r\n      return state.filter(col => col.id != action.payload) \r\n    case ADD_CARD:\r\n      return state.map(col => {\r\n        if (col.id == action.payload.id)\r\n          return {...col, list: [...col.list, action.payload.card]}\r\n        else\r\n          return col\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from \"./store\"\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardForm_card__1KK5N\",\"wrapper\":\"CardForm_wrapper__14j4j\",\"inputCard\":\"CardForm_inputCard__33hCS\",\"createCard\":\"CardForm_createCard__3HVkc\",\"addCard\":\"CardForm_addCard__2W9Kc\",\"exitCard\":\"CardForm_exitCard__1-QDV\"};"],"sourceRoot":""}